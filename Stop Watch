<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Innovative Stopwatch</title>
  <style>
    body {
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      font-family: Arial, sans-serif;
      background: linear-gradient(135deg, #e9d5ff, #f5f3ff);
      transition: background 0.6s, color 0.6s;
      color: black;
      overflow: hidden;
    }
    body.dark {
      background: linear-gradient(135deg, #4c1d95, #2e1065);
      color: white;
    }

    /* Quotes moved to side */
    .quotes {
      position: absolute;
      top: 50%;
      right: 20px;
      transform: translateY(-50%);
      width: 250px;
      font-size: 1.2rem;
      font-style: italic;
      line-height: 1.6;
      opacity: 0.5;
      color: inherit;
      z-index: 0;
    }
    body.dark .quotes {
      color: #ddd;
    }

    .card {
      position: relative;
      z-index: 1;
      background: rgba(255,255,255,0.85);
      backdrop-filter: blur(15px);
      border-radius: 20px;
      padding: 2rem;
      text-align: center;
      box-shadow: 0 8px 20px rgba(0,0,0,0.2);
    }
    body.dark .card {
      background: rgba(40,40,60,0.85);
    }

    h1 {
      font-size: 3rem;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
    }

    .buttons {
      display: flex;
      gap: 10px;
      justify-content: center;
      flex-wrap: wrap;
    }

    button {
      padding: 0.6rem 1.2rem;
      border: 2px solid rgba(255,255,255,0.4);
      border-radius: 12px;
      cursor: pointer;
      font-size: 1rem;
      font-weight: bold;
      background: rgba(255,255,255,0.15);
      backdrop-filter: blur(10px);
      transition: transform 0.2s, background 0.3s;
      color: inherit;
    }
    button:hover { transform: scale(1.05); }
    .start { border-color: #3b82f6; }
    .stop { border-color: #ef4444; }
    .reset { border-color: #6b7280; }
    .lap { border-color: #22c55e; }
    .theme { border-color: #a855f7; }

    ul {
      list-style: none;
      padding: 0;
      margin-top: 1rem;
      text-align: left;
      max-height: 200px;
      overflow-y: auto;
    }
    ul li {
      display: flex;
      justify-content: space-between;
      padding: 0.4rem 0.6rem;
      border-bottom: 1px dashed rgba(0,0,0,0.2);
      border-radius: 6px;
      background: rgba(0,0,0,0.05);
      animation: fadeIn 0.4s ease;
    }
    body.dark ul li {
      border-color: rgba(255,255,255,0.2);
      background: rgba(255,255,255,0.1);
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-5px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .flash {
      position: fixed;
      top: 20px;
      right: 20px;
      background: #22c55e;
      color: white;
      padding: 8px 14px;
      border-radius: 10px;
      font-weight: bold;
      animation: fadeOut 1s forwards;
      z-index: 999;
    }
    @keyframes fadeOut {
      0% { opacity: 1; }
      80% { opacity: 1; }
      100% { opacity: 0; transform: translateY(-20px); }
    }
  </style>
</head>
<body>
  <!-- Side quotes -->
  <div class="quotes" id="quote">
    "Time is what we want most, but what we use worst." ‚Äì William Penn
  </div>

  <div class="card">
    <h1><span id="emoji">‚è≥</span> <span id="display">00:00:00</span></h1>
    
    <div class="buttons">
      <button id="startStopBtn" class="start">Start</button>
      <button id="resetBtn" class="reset">Reset</button>
      <button id="lapBtn" class="lap">Lap</button>
      <button id="themeBtn" class="theme">üåô</button>
    </div>
    <ul id="laps"></ul>
  </div>

  <script>
    let time = 0;
    let running = false;
    let interval;
    const display = document.getElementById("display");
    const startStopBtn = document.getElementById("startStopBtn");
    const resetBtn = document.getElementById("resetBtn");
    const lapBtn = document.getElementById("lapBtn");
    const laps = document.getElementById("laps");
    const themeBtn = document.getElementById("themeBtn");
    const emoji = document.getElementById("emoji");
    const quoteBox = document.getElementById("quote");

    const quotes = [
      '"Lost time is never found again." ‚Äì Benjamin Franklin',
      '"Time waits for no one." ‚Äì Folklore',
      '"The key is in not spending time, but in investing it." ‚Äì Stephen Covey',
      '"Better three hours too soon than a minute too late." ‚Äì Shakespeare',
      '"Time is free, but it‚Äôs priceless." ‚Äì Harvey Mackay'
    ];

    // Rotate quotes every 7 seconds
    setInterval(() => {
      const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
      quoteBox.textContent = randomQuote;
    }, 7000);

    function format(ms) {
      const minutes = Math.floor(ms / 60000);
      const seconds = Math.floor((ms % 60000) / 1000);
      const milliseconds = Math.floor((ms % 1000) / 10);
      return (
        String(minutes).padStart(2, "0") + ":" +
        String(seconds).padStart(2, "0") + ":" +
        String(milliseconds).padStart(2, "0")
      );
    }

    function updateDisplay() {
      display.textContent = format(time);
    }

    startStopBtn.onclick = () => {
      if (running) {
        clearInterval(interval);
        running = false;
        startStopBtn.textContent = "Start";
        startStopBtn.className = "start";
        emoji.textContent = "‚è≥";
      } else {
        interval = setInterval(() => {
          time += 10;
          updateDisplay();
        }, 10);
        running = true;
        startStopBtn.textContent = "Stop";
        startStopBtn.className = "stop";
        emoji.textContent = "‚åõ";
      }
    };

    resetBtn.onclick = () => {
      clearInterval(interval);
      running = false;
      time = 0;
      updateDisplay();
      startStopBtn.textContent = "Start";
      startStopBtn.className = "start";
      laps.innerHTML = "";
      emoji.textContent = "‚è≥";
    };

    lapBtn.onclick = () => {
      if (running) {
        const li = document.createElement("li");
        li.innerHTML = `<span>Lap ${laps.childElementCount + 1}</span><span>${format(time)}</span>`;
        laps.appendChild(li);

        const flash = document.createElement("div");
        flash.className = "flash";
        flash.textContent = "Lap Recorded!";
        document.body.appendChild(flash);
        setTimeout(() => flash.remove(), 1000);
      }
    };

    themeBtn.onclick = () => {
      document.body.classList.toggle("dark");
      themeBtn.textContent = document.body.classList.contains("dark") ? "‚òÄÔ∏è" : "üåô";
    };

    updateDisplay();
  </script>
</body>
</html>
